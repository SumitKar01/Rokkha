// Generated by view binder compiler. Do not edit!
package com.example.rokkha.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.rokkha.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContactListLayoutBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView contactName;

  @NonNull
  public final ImageView deleteContact;

  @NonNull
  public final ImageView editContact;

  @NonNull
  public final TextView phoneNum;

  private ContactListLayoutBinding(@NonNull CardView rootView, @NonNull TextView contactName,
      @NonNull ImageView deleteContact, @NonNull ImageView editContact,
      @NonNull TextView phoneNum) {
    this.rootView = rootView;
    this.contactName = contactName;
    this.deleteContact = deleteContact;
    this.editContact = editContact;
    this.phoneNum = phoneNum;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ContactListLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContactListLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.contact_list_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContactListLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.contactName;
      TextView contactName = ViewBindings.findChildViewById(rootView, id);
      if (contactName == null) {
        break missingId;
      }

      id = R.id.deleteContact;
      ImageView deleteContact = ViewBindings.findChildViewById(rootView, id);
      if (deleteContact == null) {
        break missingId;
      }

      id = R.id.editContact;
      ImageView editContact = ViewBindings.findChildViewById(rootView, id);
      if (editContact == null) {
        break missingId;
      }

      id = R.id.phoneNum;
      TextView phoneNum = ViewBindings.findChildViewById(rootView, id);
      if (phoneNum == null) {
        break missingId;
      }

      return new ContactListLayoutBinding((CardView) rootView, contactName, deleteContact,
          editContact, phoneNum);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
